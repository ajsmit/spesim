% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pointprocess-dispatch.R
\name{simulate_points_geyer}
\alias{simulate_points_geyer}
\title{Simulate locations via a Geyer-like saturation process (spatstat-free)}
\usage{
simulate_points_geyer(
  domain,
  n_target,
  beta = NULL,
  gamma = 1.5,
  r = 1,
  sat = 2
)
}
\arguments{
\item{domain}{sf polygon/multipolygon.}

\item{n_target}{Integer target number of points.}

\item{beta}{Unused placeholder (kept for API compatibility).}

\item{gamma}{Interaction parameter (numeric). \eqn{\gamma > 1} encourages
clustering; \eqn{\gamma < 1} encourages inhibition.}

\item{r}{Interaction radius (map units).}

\item{sat}{Saturation count (non-negative integer).}
}
\value{
sf POINT layer (no attributes).
}
\description{
Implements a simple sequential acceptance sampler: propose candidate
points uniformly inside \code{domain}. Let \code{k} be the number of
already-accepted points within radius \code{r}. Accept with probability
\eqn{\gamma^{\min(k, s)}}, where \eqn{\gamma} is the interaction parameter
and \eqn{s} is the saturation count. For \eqn{\gamma > 1}, the rule induces
clustering up to \eqn{s} neighbours (values \eqn{< 1} yield inhibition).
}
\keyword{internal}
