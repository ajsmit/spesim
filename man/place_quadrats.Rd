% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quadrats_random.R
\name{place_quadrats}
\alias{place_quadrats}
\title{Random Non‑Overlapping Quadrat Placement}
\usage{
place_quadrats(domain, n_quadrats, quadrat_size)
}
\arguments{
\item{domain}{An sf polygon/multipolygon defining the sampling region.
Must carry a valid projected CRS suitable for linear units.}

\item{n_quadrats}{Integer (≥1). Target number of non‑overlapping quadrats to place.}

\item{quadrat_size}{Numeric vector of length 2, c(width, height), giving
quadrat dimensions in the same units as the domain CRS. Both values
must be positive and finite.}
}
\value{
An sf object (polygons) with:
\describe{
\item{quadrat_id}{Sequential integer identifier for each placed quadrat.}
\item{geometry}{Axis‑aligned rectangular polygon for the quadrat.}
}
If no valid placement is possible, returns an empty sf with the same CRS
and emits a warning.
}
\description{
Places axis‑aligned rectangular quadrats at random locations inside
domain, rejecting candidates that either (i) are not fully contained or
(ii) overlap any previously accepted quadrat. A simple rejection‑sampling
loop is used with a finite attempt budget.
}
\details{
\itemize{
\item Each candidate center is drawn uniformly from the domain’s bounding box,
shrunk so the full rectangle of size quadrat_size = c(width, height)
fits inside. The resulting polygon is accepted only if it is entirely
within domain and non‑overlapping with all accepted quadrats.
\item The loop stops when n_quadrats are placed or after
n_quadrats * 100 attempts (a warning is issued if the target is not met).
\item CRS: Use a projected CRS (e.g., meters). quadrat_size is
interpreted in the CRS linear units.
\item Reproducibility: Set a seed (e.g., set.seed(...)) before calling to
obtain repeatable placements.
}
}
\examples{
\dontrun{
library(sf)
dom <- create_sampling_domain()
set.seed(42)
qs <- place_quadrats(dom, n_quadrats = 20, quadrat_size = c(1.5, 1.5))
plot(st_geometry(dom), col = “grey95”, border = “grey60”)
plot(st_geometry(qs), add = TRUE, border = “black”, lwd = 1)
}
}
\seealso{
\code{\link{place_quadrats_systematic}} (regular grid),
\code{\link{place_quadrats_tiled}} (systematic tiling by cell size),
\code{\link{place_quadrats_voronoi}} (Voronoi‑based centers),
\code{\link{place_quadrats_transect}} (parallel transects)
}
