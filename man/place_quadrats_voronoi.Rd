% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quadrats_voronoi.R
\name{place_quadrats_voronoi}
\alias{place_quadrats_voronoi}
\title{Voronoi‑based Quadrat Placement}
\usage{
place_quadrats_voronoi(domain, n_quadrats, quadrat_size, voronoi_seed_factor)
}
\arguments{
\item{domain}{An sf polygon/multipolygon defining the sampling
region. Must carry a valid projected CRS suitable for linear measurements.}

\item{n_quadrats}{Integer (≥1). Target number of quadrats to place.
The actual number returned may be smaller if the domain cannot accommodate
enough suitable Voronoi cells.}

\item{quadrat_size}{Numeric vector of length 2, c(width, height), giving
quadrat dimensions in the same linear units as domain (e.g., meters).
Both values must be positive and finite.}

\item{voronoi_seed_factor}{Numeric (≥1 recommended). Multiplier controlling
how many random seeds are used to build the Voronoi diagram:
n_seeds = n_quadrats * voronoi_seed_factor. Use larger values (e.g., 8–20)
in very irregular or narrow domains to improve coverage.}
}
\value{
An sf object (polygons) with:
\describe{
\item{quadrat_id}{Sequential integer identifier of the placed quadrats.}
\item{geometry}{Axis‑aligned rectangular polygon for each quadrat.}
}
}
\description{
Places rectangular quadrats by first generating a dense set of random seed
points inside the domain, computing the Voronoi tessellation, and then
identifying those Voronoi cells whose largest inscribed circle is big
enough to contain the requested quadrat (by diagonal). For each suitable
cell, the quadrat is placed at the cell’s “pole of inaccessibility”
(center of the inscribed circle), which tends to yield well‑spaced sampling
locations even in irregular polygons.
}
\details{
\itemize{
\item The function assumes a projected (planar) CRS for domain so that
distances/areas are in linear units. If your data are in longitude/latitude,
reproject (e.g., to UTM) before calling.
\item The number of initial seeds is n_quadrats * voronoi_seed_factor. Larger
values explore the domain more densely and typically find more suitable
cells, at the cost of extra computation.
\item Suitability is decided by comparing each cell’s inscribed‑circle radius
to half the requested quadrat diagonal:
radius >= sqrt(width^2 + height^2) / 2.
\item If fewer than n_quadrats suitable cells exist, all suitable cells are
used and a warning is issued.
\item Quadrats are axis‑aligned rectangles centered at the selected cell
centers. Because the cell centers can be near each other, axis‑aligned
rectangles may still overlap slightly in tight spaces—even when circles
do not. If strict non‑overlap is required, post‑filtering is recommended.
\item Internally uses sf::st_voronoi() for tessellation and
st_inscribed_circle() (provided by lwgeom) to compute maximal
in‑circle centers/radii.
}
}
\examples{
\dontrun{
library(sf)
set.seed(2)
dom <- create_sampling_domain()
qs  <- place_quadrats_voronoi(
  domain = dom,
  n_quadrats = 20,
  quadrat_size = c(1.5, 1.5),
  voronoi_seed_factor = 12
)
plot(st_geometry(dom), col = “grey95”, border = “grey60”)
plot(st_geometry(qs), add = TRUE, border = “black”, lwd = 1)
}
}
\seealso{
\code{\link{place_quadrats}} (random, non‑overlapping),
\code{\link{place_quadrats_tiled}} (systematic tiling),
\code{\link{place_quadrats_systematic}} (grid centers within domain),
\code{\link{place_quadrats_transect}} (parallel transects)
}
